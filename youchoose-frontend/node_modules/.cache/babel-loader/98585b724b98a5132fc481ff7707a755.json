{"ast":null,"code":"import { SignUpWithGoogle } from \"./firebaseService\";\nexport let AuthType;\n\n(function (AuthType) {\n  AuthType[\"Register\"] = \"register\";\n  AuthType[\"Email\"] = \"email\";\n  AuthType[\"Google\"] = \"google\";\n})(AuthType || (AuthType = {}));\n\nconst Authenticate = async authType => {\n  switch (authType) {\n    case AuthType.Google:\n      return await SignUpWithGoogle();\n\n    default:\n      return await SignUpWithGoogle();\n  }\n};\n\n_c = Authenticate;\nexport default Authenticate;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authenticate\");","map":{"version":3,"names":["SignUpWithGoogle","AuthType","Authenticate","authType","Google"],"sources":["/Users/divjotsingh/Documents/Youchoose/youchoose/src/services/authService.tsx"],"sourcesContent":["import User from \"../entities/user\"\nimport { SignUpWithGoogle } from \"./firebaseService\"\n\nexport enum AuthType {\n    Register = 'register',\n    Email = 'email',\n    Google = 'google'\n}\n\nconst Authenticate = async (authType: AuthType): Promise<User | null> => {\n    switch(authType){\n        case AuthType.Google:\n            return await SignUpWithGoogle()\n        default:\n            return await SignUpWithGoogle()\n    }\n}\n\nexport default Authenticate"],"mappings":"AACA,SAASA,gBAAT,QAAiC,mBAAjC;AAEA,WAAYC,QAAZ;;WAAYA,Q;EAAAA,Q;EAAAA,Q;EAAAA,Q;GAAAA,Q,KAAAA,Q;;AAMZ,MAAMC,YAAY,GAAG,MAAOC,QAAP,IAAoD;EACrE,QAAOA,QAAP;IACI,KAAKF,QAAQ,CAACG,MAAd;MACI,OAAO,MAAMJ,gBAAgB,EAA7B;;IACJ;MACI,OAAO,MAAMA,gBAAgB,EAA7B;EAJR;AAMH,CAPD;;KAAME,Y;AASN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}