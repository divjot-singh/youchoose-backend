{"ast":null,"code":"var _jsxFileName = \"/Users/divjotsingh/Documents/Youchoose/youchoose/src/pages/SelectSongs/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Header from '../../components/header';\nimport { useDebounce } from 'usehooks-ts';\nimport './index.scss';\nimport { useCommonComponents } from '../../providers/commonComponentsProvider';\nimport NetworkService from '../../services/networkService';\nimport { API_ENDPOINTS } from '../../utils/apiEndpoints';\nimport { getSongFromMap } from '../../entities/song';\nimport { SnackbarTypes } from '../../components/snackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SelectSongs = () => {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const debouncedValue = useDebounce(query, 500);\n  const [songs, setSongs] = useState([]);\n  const {\n    showLoader,\n    hideLoader,\n    showSnackbar\n  } = useCommonComponents();\n\n  const fetchSongs = async text => {\n    showLoader(null);\n\n    try {\n      const data = await NetworkService.get({\n        url: `${API_ENDPOINTS.youtubeBaseUrl}${API_ENDPOINTS.youtubeSearch}`,\n        isAbsoluteUrl: true,\n        isYoutubeApiUrl: true,\n        data: {\n          q: text\n        }\n      });\n      hideLoader();\n      const songsResult = data === null || data === void 0 ? void 0 : data.map(songItem => {\n        return getSongFromMap(songItem);\n      });\n      setSongs(songsResult);\n    } catch (err) {\n      console.error(err);\n      showSnackbar({\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Cound not fetch songs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 26\n        }, this),\n        type: SnackbarTypes.ERROR\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (debouncedValue !== null && debouncedValue !== void 0 && debouncedValue.length) {\n      fetchSongs(debouncedValue);\n    }\n  }, [debouncedValue]);\n\n  const getSongsResults = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      pageName: \"Select songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songs-container container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"search\",\n        id: \"search\",\n        className: \"search-input\",\n        value: query,\n        onChange: e => setQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), getSongsResults()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SelectSongs, \"YRhDiumQIe9izGTzY7yDzWWaV8Q=\", false, function () {\n  return [useDebounce, useCommonComponents];\n});\n\n_c = SelectSongs;\nexport default SelectSongs;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectSongs\");","map":{"version":3,"names":["React","useEffect","useState","Header","useDebounce","useCommonComponents","NetworkService","API_ENDPOINTS","getSongFromMap","SnackbarTypes","SelectSongs","query","setQuery","debouncedValue","songs","setSongs","showLoader","hideLoader","showSnackbar","fetchSongs","text","data","get","url","youtubeBaseUrl","youtubeSearch","isAbsoluteUrl","isYoutubeApiUrl","q","songsResult","map","songItem","err","console","error","children","type","ERROR","length","getSongsResults","e","target","value"],"sources":["/Users/divjotsingh/Documents/Youchoose/youchoose/src/pages/SelectSongs/index.tsx"],"sourcesContent":["import React, {  useEffect, useState } from 'react'\nimport Header from '../../components/header'\nimport { useDebounce } from 'usehooks-ts'\nimport './index.scss'\nimport { useCommonComponents } from '../../providers/commonComponentsProvider'\nimport NetworkService from '../../services/networkService'\nimport { API_ENDPOINTS } from '../../utils/apiEndpoints'\nimport Song, { getSongFromMap } from '../../entities/song'\nimport { SnackbarTypes } from '../../components/snackbar'\n\n\nconst SelectSongs = () => {\n    const [query, setQuery] = useState<string>('')\n    const debouncedValue = useDebounce<string>(query, 500)\n    const [songs, setSongs] = useState<Song[]>([])\n    const {showLoader,hideLoader, showSnackbar} = useCommonComponents()\n    const fetchSongs =  async (text:string) => {\n        showLoader(null)\n        try{\n            const data = await NetworkService.get({url:`${API_ENDPOINTS.youtubeBaseUrl}${API_ENDPOINTS.youtubeSearch}`, isAbsoluteUrl:true, isYoutubeApiUrl:true, data:{\n                q:text\n            }})\n           hideLoader()\n            const songsResult:Song[] = data?.map((songItem:any) => {\n                return getSongFromMap(songItem)\n            })\n            setSongs(songsResult)\n        } catch(err){\n            console.error(err)\n            showSnackbar({\n                children:<span>Cound not fetch songs</span>,\n                type:SnackbarTypes.ERROR\n            })\n        }\n        \n    }\n    useEffect(() => {\n        if(debouncedValue?.length){\n            fetchSongs(debouncedValue)\n        }\n    },[debouncedValue])\n\n    const getSongsResults = () => {\n\n    }\n    return (\n        <>\n            <Header pageName='Select songs' />\n            <div className='songs-container container'>\n                <input name='search' id='search' className='search-input' value={query} onChange={e => setQuery(e.target.value)} />\n                {getSongsResults()}\n            </div>\n        </>\n    )\n}\n\nexport default SelectSongs"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,cAAP;AACA,SAASC,mBAAT,QAAoC,0CAApC;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAAeC,cAAf,QAAqC,qBAArC;AACA,SAASC,aAAT,QAA8B,2BAA9B;;;;AAGA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAS,EAAT,CAAlC;EACA,MAAMW,cAAc,GAAGT,WAAW,CAASO,KAAT,EAAgB,GAAhB,CAAlC;EACA,MAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAS,EAAT,CAAlC;EACA,MAAM;IAACc,UAAD;IAAYC,UAAZ;IAAwBC;EAAxB,IAAwCb,mBAAmB,EAAjE;;EACA,MAAMc,UAAU,GAAI,MAAOC,IAAP,IAAuB;IACvCJ,UAAU,CAAC,IAAD,CAAV;;IACA,IAAG;MACC,MAAMK,IAAI,GAAG,MAAMf,cAAc,CAACgB,GAAf,CAAmB;QAACC,GAAG,EAAE,GAAEhB,aAAa,CAACiB,cAAe,GAAEjB,aAAa,CAACkB,aAAc,EAAnE;QAAsEC,aAAa,EAAC,IAApF;QAA0FC,eAAe,EAAC,IAA1G;QAAgHN,IAAI,EAAC;UACvJO,CAAC,EAACR;QADqJ;MAArH,CAAnB,CAAnB;MAGDH,UAAU;MACT,MAAMY,WAAkB,GAAGR,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAES,GAAN,CAAWC,QAAD,IAAkB;QACnD,OAAOvB,cAAc,CAACuB,QAAD,CAArB;MACH,CAF0B,CAA3B;MAGAhB,QAAQ,CAACc,WAAD,CAAR;IACH,CATD,CASE,OAAMG,GAAN,EAAU;MACRC,OAAO,CAACC,KAAR,CAAcF,GAAd;MACAd,YAAY,CAAC;QACTiB,QAAQ,eAAC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADA;QAETC,IAAI,EAAC3B,aAAa,CAAC4B;MAFV,CAAD,CAAZ;IAIH;EAEJ,CAnBD;;EAoBApC,SAAS,CAAC,MAAM;IACZ,IAAGY,cAAH,aAAGA,cAAH,eAAGA,cAAc,CAAEyB,MAAnB,EAA0B;MACtBnB,UAAU,CAACN,cAAD,CAAV;IACH;EACJ,CAJQ,EAIP,CAACA,cAAD,CAJO,CAAT;;EAMA,MAAM0B,eAAe,GAAG,MAAM,CAE7B,CAFD;;EAGA,oBACI;IAAA,wBACI,QAAC,MAAD;MAAQ,QAAQ,EAAC;IAAjB;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,2BAAf;MAAA,wBACI;QAAO,IAAI,EAAC,QAAZ;QAAqB,EAAE,EAAC,QAAxB;QAAiC,SAAS,EAAC,cAA3C;QAA0D,KAAK,EAAE5B,KAAjE;QAAwE,QAAQ,EAAE6B,CAAC,IAAI5B,QAAQ,CAAC4B,CAAC,CAACC,MAAF,CAASC,KAAV;MAA/F;QAAA;QAAA;QAAA;MAAA,QADJ,EAEKH,eAAe,EAFpB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AASH,CA3CD;;GAAM7B,W;UAEqBN,W,EAEuBC,mB;;;KAJ5CK,W;AA6CN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}