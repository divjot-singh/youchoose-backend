{"ast":null,"code":"import { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { UserType } from '../entities/user';\nimport { LocalStorageKeys } from '../utils/localstorageKeys';\nimport LocalStorageMethods from './localstorageService';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_API_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\nexport const InitialiseFirebaseApp = () => {\n  const app = initializeApp(firebaseConfig);\n  const analytics = getAnalytics(app);\n};\n_c = InitialiseFirebaseApp;\n\nconst getUser = (firebaseUser, userType, token) => {\n  const user = {\n    display_name: firebaseUser.displayName || '',\n    email: firebaseUser.email || '',\n    photo_url: firebaseUser.photoURL || '',\n    uid: firebaseUser.uid,\n    user_type: userType,\n    token: token\n  };\n  return user;\n};\n\nexport const SaveUserToLocalStorage = user => {\n  LocalStorageMethods.set(LocalStorageKeys.user_id, user.uid);\n  LocalStorageMethods.set(LocalStorageKeys.token, user.token);\n  LocalStorageMethods.set(LocalStorageKeys.type, user.user_type);\n};\n_c2 = SaveUserToLocalStorage;\nexport const RemoveUserFromLocalStorage = () => {\n  LocalStorageMethods.delete(LocalStorageKeys.user_id);\n  LocalStorageMethods.delete(LocalStorageKeys.token);\n};\n_c3 = RemoveUserFromLocalStorage;\nexport const GetCurrentUser = () => {\n  const auth = getAuth();\n\n  if (auth.currentUser) {\n    const token = LocalStorageMethods.get(LocalStorageKeys.token),\n          type = LocalStorageMethods.get(LocalStorageKeys.type);\n    const userType = type;\n    const user = getUser(auth.currentUser, userType, token || '');\n    SaveUserToLocalStorage(user);\n    return user;\n  }\n};\n_c4 = GetCurrentUser;\nexport const SignUpWithGoogle = async () => {\n  const auth = getAuth();\n  const provider = new GoogleAuthProvider();\n\n  try {\n    const result = await signInWithPopup(auth, provider);\n\n    if (result) {\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential === null || credential === void 0 ? void 0 : credential.accessToken;\n      const user = getUser(result.user, UserType.MODERATOR, token || '');\n      SaveUserToLocalStorage(user);\n      return user;\n    }\n\n    return null;\n  } catch (err) {\n    console.log(err);\n    return null;\n  }\n};\n_c5 = SignUpWithGoogle;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"InitialiseFirebaseApp\");\n$RefreshReg$(_c2, \"SaveUserToLocalStorage\");\n$RefreshReg$(_c3, \"RemoveUserFromLocalStorage\");\n$RefreshReg$(_c4, \"GetCurrentUser\");\n$RefreshReg$(_c5, \"SignUpWithGoogle\");","map":{"version":3,"names":["getAuth","GoogleAuthProvider","signInWithPopup","initializeApp","getAnalytics","UserType","LocalStorageKeys","LocalStorageMethods","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_API_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","InitialiseFirebaseApp","app","analytics","getUser","firebaseUser","userType","token","user","display_name","displayName","email","photo_url","photoURL","uid","user_type","SaveUserToLocalStorage","set","user_id","type","RemoveUserFromLocalStorage","delete","GetCurrentUser","auth","currentUser","get","SignUpWithGoogle","provider","result","credential","credentialFromResult","accessToken","MODERATOR","err","console","log"],"sources":["/Users/divjotsingh/Documents/Youchoose/youchoose/src/services/firebaseService.tsx"],"sourcesContent":["import React from 'react'\nimport { Auth, getAuth, getRedirectResult, GoogleAuthProvider, OAuthCredential, signInWithPopup, signInWithRedirect, UserCredential, User as FirebaseUser } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport User, { UserType } from '../entities/user';\nimport { LocalStorageKeys } from '../utils/localstorageKeys';\nimport LocalStorageMethods from './localstorageService';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_API_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\nexport const InitialiseFirebaseApp = () => {\n    const app = initializeApp(firebaseConfig);\n    const analytics = getAnalytics(app);\n}\n\nconst getUser = (firebaseUser:FirebaseUser, userType:UserType, token:string):User => {\n    const user:User = {\n        display_name: firebaseUser.displayName || '',\n        email: firebaseUser.email || '',\n        photo_url: firebaseUser.photoURL || '',\n        uid: firebaseUser.uid,\n        user_type: userType,\n        token: token\n    } \n\n    return user;\n}\n\nexport const SaveUserToLocalStorage = (user:User) => {\n    LocalStorageMethods.set(LocalStorageKeys.user_id, user.uid)\n    LocalStorageMethods.set(LocalStorageKeys.token, user.token)\n    LocalStorageMethods.set(LocalStorageKeys.type, user.user_type)\n}\n\nexport const RemoveUserFromLocalStorage = () => {\n    LocalStorageMethods.delete(LocalStorageKeys.user_id)\n    LocalStorageMethods.delete(LocalStorageKeys.token)\n}\nexport const GetCurrentUser = () => {\n    const auth : Auth = getAuth();\n    if(auth.currentUser){\n        const token = LocalStorageMethods.get(LocalStorageKeys.token), type = LocalStorageMethods.get(LocalStorageKeys.type)\n        const userType: UserType = type as unknown as UserType\n        const user = getUser(auth.currentUser, userType, token || '');\n        SaveUserToLocalStorage(user);\n        return user;\n    }\n}\nexport const SignUpWithGoogle = async (): Promise<User | null> => {\n        const auth : Auth = getAuth();\n        const provider:GoogleAuthProvider = new GoogleAuthProvider();\n        try{\n            const result: UserCredential | null = await signInWithPopup(auth, provider)\n            if(result){\n                const credential: OAuthCredential | null = GoogleAuthProvider.credentialFromResult(result);\n                const token = credential?.accessToken;\n                const user = getUser(result.user, UserType.MODERATOR, token || '');\n                SaveUserToLocalStorage(user);\n                return user;\n            }\n            return null;\n        } catch(err){\n            console.log(err) \n            return null;\n        }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}