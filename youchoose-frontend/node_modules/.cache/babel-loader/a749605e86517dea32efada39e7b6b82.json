{"ast":null,"code":"import { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { UserType } from '../entities/user';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_API_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\nexport const InitialiseFirebaseApp = () => {\n  console.log(firebaseConfig);\n  const app = initializeApp(firebaseConfig);\n  const analytics = getAnalytics(app);\n};\n_c = InitialiseFirebaseApp;\n\nconst getUser = (firebaseUser, userType, token) => {\n  const user = {\n    display_name: firebaseUser.displayName || '',\n    email: firebaseUser.email || '',\n    photo_url: firebaseUser.photoURL || '',\n    uid: firebaseUser.uid,\n    user_type: userType,\n    token: token\n  };\n  return user;\n};\n\nexport const SignUpWithGoogle = () => {\n  const auth = getAuth();\n  const provider = new GoogleAuthProvider();\n  signInWithPopup(auth, provider).then(result => {\n    if (result) {\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential === null || credential === void 0 ? void 0 : credential.accessToken;\n      const user = getUser(result.user, UserType.MODERATOR, token || '');\n      console.log(token);\n      console.log(user);\n    }\n  }).catch(error => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message; // The email of the user's account used.\n\n    const email = error.customData.email; // The AuthCredential type that was used.\n\n    const credential = GoogleAuthProvider.credentialFromError(error); // ...\n  });\n};\n_c2 = SignUpWithGoogle;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InitialiseFirebaseApp\");\n$RefreshReg$(_c2, \"SignUpWithGoogle\");","map":{"version":3,"names":["getAuth","GoogleAuthProvider","signInWithPopup","initializeApp","getAnalytics","UserType","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_API_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","InitialiseFirebaseApp","console","log","app","analytics","getUser","firebaseUser","userType","token","user","display_name","displayName","email","photo_url","photoURL","uid","user_type","SignUpWithGoogle","auth","provider","then","result","credential","credentialFromResult","accessToken","MODERATOR","catch","error","errorCode","code","errorMessage","message","customData","credentialFromError"],"sources":["/Users/divjotsingh/Documents/Youchoose/youchoose/src/services/firebaseService.tsx"],"sourcesContent":["import React from 'react'\nimport { Auth, getAuth, getRedirectResult, GoogleAuthProvider, OAuthCredential, signInWithPopup, signInWithRedirect, UserCredential, User as FirebaseUser } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport User, { UserType } from '../entities/user';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_API_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\nexport const InitialiseFirebaseApp = () => {\n    console.log(firebaseConfig)\n    const app = initializeApp(firebaseConfig);\n    const analytics = getAnalytics(app);\n}\n\nconst getUser = (firebaseUser:FirebaseUser, userType:UserType, token:string):User => {\n    const user:User = {\n        display_name: firebaseUser.displayName || '',\n        email: firebaseUser.email || '',\n        photo_url: firebaseUser.photoURL || '',\n        uid: firebaseUser.uid,\n        user_type: userType,\n        token: token\n    } \n\n    return user;\n}\n\nexport const SignUpWithGoogle = () => {\n        const auth : Auth = getAuth();\n        const provider:GoogleAuthProvider = new GoogleAuthProvider();\n        signInWithPopup(auth, provider)\n        .then((result : UserCredential | null) => {\n            if(result){\n                const credential: OAuthCredential | null = GoogleAuthProvider.credentialFromResult(result);\n                const token = credential?.accessToken;\n                const user = getUser(result.user, UserType.MODERATOR, token || '');\n                console.log(token)\n                console.log(user)\n            }\n        }).catch((error) => {\n            // Handle Errors here.\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            // The email of the user's account used.\n            const email = error.customData.email;\n            // The AuthCredential type that was used.\n            const credential = GoogleAuthProvider.credentialFromError(error);\n            // ...\n        });\n}\n"],"mappings":"AACA,SAAeA,OAAf,EAA2CC,kBAA3C,EAAgFC,eAAhF,QAAiK,eAAjK;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAAeC,QAAf,QAA+B,kBAA/B;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADC;EAErBC,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFH;EAGrBC,SAAS,EAAEL,OAAO,CAACC,GAAR,CAAYK,6BAHF;EAIrBC,aAAa,EAAEP,OAAO,CAACC,GAAR,CAAYO,iCAJN;EAKrBC,iBAAiB,EAAET,OAAO,CAACC,GAAR,CAAYS,sCALV;EAMrBC,KAAK,EAAEX,OAAO,CAACC,GAAR,CAAYW,yBANE;EAOrBC,aAAa,EAAEb,OAAO,CAACC,GAAR,CAAYa;AAPN,CAAvB;AAUA,OAAO,MAAMC,qBAAqB,GAAG,MAAM;EACvCC,OAAO,CAACC,GAAR,CAAYnB,cAAZ;EACA,MAAMoB,GAAG,GAAGvB,aAAa,CAACG,cAAD,CAAzB;EACA,MAAMqB,SAAS,GAAGvB,YAAY,CAACsB,GAAD,CAA9B;AACH,CAJM;KAAMH,qB;;AAMb,MAAMK,OAAO,GAAG,CAACC,YAAD,EAA4BC,QAA5B,EAA+CC,KAA/C,KAAqE;EACjF,MAAMC,IAAS,GAAG;IACdC,YAAY,EAAEJ,YAAY,CAACK,WAAb,IAA4B,EAD5B;IAEdC,KAAK,EAAEN,YAAY,CAACM,KAAb,IAAsB,EAFf;IAGdC,SAAS,EAAEP,YAAY,CAACQ,QAAb,IAAyB,EAHtB;IAIdC,GAAG,EAAET,YAAY,CAACS,GAJJ;IAKdC,SAAS,EAAET,QALG;IAMdC,KAAK,EAAEA;EANO,CAAlB;EASA,OAAOC,IAAP;AACH,CAXD;;AAaA,OAAO,MAAMQ,gBAAgB,GAAG,MAAM;EAC9B,MAAMC,IAAW,GAAGzC,OAAO,EAA3B;EACA,MAAM0C,QAA2B,GAAG,IAAIzC,kBAAJ,EAApC;EACAC,eAAe,CAACuC,IAAD,EAAOC,QAAP,CAAf,CACCC,IADD,CACOC,MAAD,IAAoC;IACtC,IAAGA,MAAH,EAAU;MACN,MAAMC,UAAkC,GAAG5C,kBAAkB,CAAC6C,oBAAnB,CAAwCF,MAAxC,CAA3C;MACA,MAAMb,KAAK,GAAGc,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEE,WAA1B;MACA,MAAMf,IAAI,GAAGJ,OAAO,CAACgB,MAAM,CAACZ,IAAR,EAAc3B,QAAQ,CAAC2C,SAAvB,EAAkCjB,KAAK,IAAI,EAA3C,CAApB;MACAP,OAAO,CAACC,GAAR,CAAYM,KAAZ;MACAP,OAAO,CAACC,GAAR,CAAYO,IAAZ;IACH;EACJ,CATD,EASGiB,KATH,CASUC,KAAD,IAAW;IAChB;IACA,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;IACA,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B,CAHgB,CAIhB;;IACA,MAAMnB,KAAK,GAAGe,KAAK,CAACK,UAAN,CAAiBpB,KAA/B,CALgB,CAMhB;;IACA,MAAMU,UAAU,GAAG5C,kBAAkB,CAACuD,mBAAnB,CAAuCN,KAAvC,CAAnB,CAPgB,CAQhB;EACH,CAlBD;AAmBP,CAtBM;MAAMV,gB"},"metadata":{},"sourceType":"module"}