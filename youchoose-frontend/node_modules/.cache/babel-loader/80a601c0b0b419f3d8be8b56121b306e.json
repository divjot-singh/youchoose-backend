{"ast":null,"code":"import { getAuth, GoogleAuthProvider, OAuthCredential, signInWithPopup, signInWithCredential, signOut, createUserWithEmailAndPassword, signInWithEmailAndPassword, getIdTokenResult } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { UserType } from '../entities/user';\nimport { LocalStorageKeys } from '../utils/localstorageKeys';\nimport LocalStorageMethods from './localstorageService';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_API_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\nexport const InitialiseFirebaseApp = () => {\n  const app = initializeApp(firebaseConfig);\n  const analytics = getAnalytics(app);\n  return true;\n};\n_c = InitialiseFirebaseApp;\n\nconst getUser = (firebaseUser, userType, token) => {\n  const user = {\n    display_name: firebaseUser.displayName || '',\n    email: firebaseUser.email || '',\n    photo_url: firebaseUser.photoURL || '',\n    uid: firebaseUser.uid,\n    user_type: userType,\n    token: token\n  };\n  return user;\n};\n\nexport const SaveUserToLocalStorage = user => {\n  var _user$credential;\n\n  LocalStorageMethods.set(LocalStorageKeys.user_id, user.uid);\n  LocalStorageMethods.set(LocalStorageKeys.token, user.token);\n  LocalStorageMethods.set(LocalStorageKeys.type, user.user_type);\n  LocalStorageMethods.set(LocalStorageKeys.credential, JSON.stringify(user === null || user === void 0 ? void 0 : (_user$credential = user.credential) === null || _user$credential === void 0 ? void 0 : _user$credential.toJSON()));\n};\n_c2 = SaveUserToLocalStorage;\nexport const RemoveUserFromLocalStorage = () => {\n  LocalStorageMethods.delete(LocalStorageKeys.user_id);\n  LocalStorageMethods.delete(LocalStorageKeys.token);\n  LocalStorageMethods.delete(LocalStorageKeys.type);\n  LocalStorageMethods.delete(LocalStorageKeys.credential);\n};\n_c3 = RemoveUserFromLocalStorage;\nexport const getError = err => {\n  const error = {\n    code: err.code,\n    message: err.message\n  };\n  console.error(err);\n  return error;\n};\nexport const GetCurrentUser = async () => {\n  try {\n    var _LocalStorageMethods$;\n\n    const auth = getAuth();\n    const credential = OAuthCredential.fromJSON(JSON.parse((_LocalStorageMethods$ = LocalStorageMethods.get(LocalStorageKeys.credential)) !== null && _LocalStorageMethods$ !== void 0 ? _LocalStorageMethods$ : '{}'));\n\n    if (credential) {\n      const result = await signInWithCredential(auth, credential);\n\n      if (result) {\n        const idToken = await getIdTokenResult(result.user);\n        const user = getUser(result.user, UserType.MODERATOR, idToken.token || '');\n        SaveUserToLocalStorage(user);\n        return user;\n      }\n\n      return null;\n    }\n\n    return null;\n  } catch (err) {\n    return getError(err);\n  }\n};\n_c4 = GetCurrentUser;\nexport const SignUpWithGoogle = async () => {\n  const auth = getAuth();\n  const provider = new GoogleAuthProvider();\n\n  try {\n    const result = await signInWithPopup(auth, provider);\n\n    if (result) {\n      const idToken = await getIdTokenResult(result.user);\n      const user = getUser(result.user, UserType.MODERATOR, idToken.token || '');\n      SaveUserToLocalStorage(user);\n      return user;\n    }\n\n    return null;\n  } catch (err) {\n    return getError(err);\n  }\n};\n_c5 = SignUpWithGoogle;\nexport const Register = async (email, password, username) => {\n  //const {showSnackbar} = useCommonComponents()\n  if (!email || !password) return null;\n  const auth = getAuth();\n\n  try {\n    const result = await createUserWithEmailAndPassword(auth, email, password);\n\n    if (result) {\n      const idToken = await getIdTokenResult(result.user);\n      const user = getUser(result.user, UserType.MODERATOR, idToken.token || '');\n      SaveUserToLocalStorage(user);\n      return user;\n    }\n\n    return null;\n  } catch (err) {\n    return getError(err);\n  }\n};\n_c6 = Register;\nexport const LoginWithEmail = async (email, password) => {\n  if (!email || !password) return null;\n  const auth = getAuth();\n\n  try {\n    const result = await signInWithEmailAndPassword(auth, email, password);\n\n    if (result) {\n      const idToken = await getIdTokenResult(result.user);\n      const user = getUser(result.user, UserType.MODERATOR, idToken.token || '');\n      SaveUserToLocalStorage(user);\n      return user;\n    }\n\n    return null;\n  } catch (err) {\n    return getError(err);\n  }\n};\n_c7 = LoginWithEmail;\nexport const Logout = async () => {\n  const auth = getAuth();\n  await signOut(auth);\n  RemoveUserFromLocalStorage();\n};\n_c8 = Logout;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"InitialiseFirebaseApp\");\n$RefreshReg$(_c2, \"SaveUserToLocalStorage\");\n$RefreshReg$(_c3, \"RemoveUserFromLocalStorage\");\n$RefreshReg$(_c4, \"GetCurrentUser\");\n$RefreshReg$(_c5, \"SignUpWithGoogle\");\n$RefreshReg$(_c6, \"Register\");\n$RefreshReg$(_c7, \"LoginWithEmail\");\n$RefreshReg$(_c8, \"Logout\");","map":{"version":3,"names":["getAuth","GoogleAuthProvider","OAuthCredential","signInWithPopup","signInWithCredential","signOut","createUserWithEmailAndPassword","signInWithEmailAndPassword","getIdTokenResult","initializeApp","getAnalytics","UserType","LocalStorageKeys","LocalStorageMethods","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_API_ID","measurementId","REACT_APP_FIREBASE_MEASUREMENT_ID","InitialiseFirebaseApp","app","analytics","getUser","firebaseUser","userType","token","user","display_name","displayName","email","photo_url","photoURL","uid","user_type","SaveUserToLocalStorage","set","user_id","type","credential","JSON","stringify","toJSON","RemoveUserFromLocalStorage","delete","getError","err","error","code","message","console","GetCurrentUser","auth","fromJSON","parse","get","result","idToken","MODERATOR","SignUpWithGoogle","provider","Register","password","username","LoginWithEmail","Logout"],"sources":["/Users/divjotsingh/Documents/Youchoose/youchoose/src/services/firebaseService.tsx"],"sourcesContent":["import React from 'react'\nimport { Auth, getAuth, getRedirectResult, GoogleAuthProvider, OAuthCredential, signInWithPopup, signInWithCredential, UserCredential, User as FirebaseUser, signOut, EmailAuthProvider, createUserWithEmailAndPassword, EmailAuthCredential, signInWithEmailAndPassword, getIdTokenResult, IdTokenResult } from \"firebase/auth\";\nimport { FirebaseError, initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport User, { UserType } from '../entities/user';\nimport { LocalStorageKeys } from '../utils/localstorageKeys';\nimport LocalStorageMethods from './localstorageService';\nimport { useCommonComponents } from '../providers/commonComponentsProvider';\nimport { ErrorCodeStrings } from '../utils/errorCodeStrings';\nimport {Error} from '../entities/error';\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_API_ID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\n};\n\nexport const InitialiseFirebaseApp = () => {\n    const app = initializeApp(firebaseConfig);\n    const analytics = getAnalytics(app);\n    return true\n}\n\nconst getUser = (firebaseUser:FirebaseUser, userType:UserType, token:string):User => {\n    const user:User = {\n        display_name: firebaseUser.displayName || '',\n        email: firebaseUser.email || '',\n        photo_url: firebaseUser.photoURL || '',\n        uid: firebaseUser.uid,\n        user_type: userType,\n        token: token\n    } \n\n    return user;\n}\n\nexport const SaveUserToLocalStorage = (user:User) => {\n    LocalStorageMethods.set(LocalStorageKeys.user_id, user.uid)\n    LocalStorageMethods.set(LocalStorageKeys.token, user.token)\n    LocalStorageMethods.set(LocalStorageKeys.type, user.user_type)\n    LocalStorageMethods.set(LocalStorageKeys.credential, JSON.stringify(user?.credential?.toJSON()))\n}\n\nexport const RemoveUserFromLocalStorage = () => {\n    LocalStorageMethods.delete(LocalStorageKeys.user_id)\n    LocalStorageMethods.delete(LocalStorageKeys.token)\n    LocalStorageMethods.delete(LocalStorageKeys.type)\n    LocalStorageMethods.delete(LocalStorageKeys.credential)\n}\n\nexport const getError = (err:FirebaseError | any) => {\n    const error:Error = {\n        code: err.code,\n        message: err.message\n    }\n    console.error(err)\n    return error\n}\n\nexport const GetCurrentUser = async (): Promise<User | null | Error> => {\n    try{\n        const auth : Auth = getAuth();\n        const credential:OAuthCredential | null = OAuthCredential.fromJSON(JSON.parse(LocalStorageMethods.get(LocalStorageKeys.credential) ?? '{}'))\n        if(credential){\n            const result: UserCredential | null = await signInWithCredential(auth, credential)\n            if(result){\n                const idToken:IdTokenResult = await getIdTokenResult(result.user)\n                const user = getUser(result.user, UserType.MODERATOR, idToken.token || '');\n                SaveUserToLocalStorage(user);\n                return user;\n            }\n            return null;\n        }\n        return null\n    } catch(err) {\n        return getError(err);\n    } \n}\n\nexport const SignUpWithGoogle = async (): Promise<User | null | Error> => {\n        const auth : Auth = getAuth();\n        const provider:GoogleAuthProvider = new GoogleAuthProvider();\n        try{\n            const result: UserCredential | null = await signInWithPopup(auth, provider)\n            if(result){\n                const idToken:IdTokenResult = await getIdTokenResult(result.user)\n                const user = getUser(result.user, UserType.MODERATOR, idToken.token || '');\n                SaveUserToLocalStorage(user);\n                return user;\n            }\n            return null;\n        } catch(err){\n            return getError(err);\n        }\n}\n\nexport const Register = async (email?:string, password?:string, username?:string):Promise<User | null | Error> =>{\n    //const {showSnackbar} = useCommonComponents()\n    if(!email || !password) return null\n    const auth : Auth = getAuth();\n    \n    try{\n        const result: UserCredential | null = await createUserWithEmailAndPassword(auth, email, password)\n        if(result){\n            const idToken:IdTokenResult = await getIdTokenResult(result.user)\n            const user = getUser(result.user, UserType.MODERATOR, idToken.token || '');\n            SaveUserToLocalStorage(user);\n            return user;\n        }\n        return null\n    } catch(err:FirebaseError | any){\n        return getError(err);\n    }\n}\n\nexport const LoginWithEmail = async (email?:string, password?:string): Promise<User | null | Error> => {\n    if(!email || !password) return null\n    const auth : Auth = getAuth();\n    \n    try{\n        const result: UserCredential | null = await signInWithEmailAndPassword(auth, email, password)\n        if(result){\n            const idToken:IdTokenResult = await getIdTokenResult(result.user)\n            const user = getUser(result.user, UserType.MODERATOR, idToken.token || '');\n            SaveUserToLocalStorage(user);\n            return user;\n        }\n        return null\n    } catch(err:FirebaseError | any){\n        return getError(err);\n    }\n}\n\nexport const Logout = async () => {\n    const auth : Auth = getAuth();\n    await signOut(auth)\n    RemoveUserFromLocalStorage()\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}